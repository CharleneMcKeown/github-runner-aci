# This is a basic workflow to help you get started with Actions

name: Build and Deploy GH Runner on ACI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    # branches: [ main ]
  pull_request:
    # branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  IMAGE_NAME: runner
  IMAGE_TAG: ${{ github.run_number }}
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Build and Push to ACR
        run: | 
          docker build . -t ${{ secrets.ACR_SERVER }}/$IMAGE_NAME:$IMAGE_TAG
      - name: Login to ACR 
        run:  docker login ${{ secrets.ACR_SERVER }} -u ${{ secrets.ACR_USER }} -p ${{ secrets.ACR_PASSWORD }} 
      - name: Push to ACR
        run: |
          docker push ${{ secrets.ACR_SERVER }}/$IMAGE_NAME:$IMAGE_TAG

      - name: Azure Login
        uses: Azure/login@v1
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.AZURE_CREDENTIALS }}
  
      - name: Deploy to Azure Container Instances
        uses: Azure/aci-deploy@v1
        with:
          # Name of the Resource Group in which the Container Instance will be created
          resource-group: mmckeown7rg
          location: westeurope
          cpu: 2
          dns-name-label: mmckeown7rg${{ github.run_number }}
          # List of environment variables for the container. Space-seperated in "key=value" format
          environment-variables: RUNNER_REPOSITORY_URL=https://github.com/CharleneMcKeown/github-runner-aci
          image: ${{ SECRETS.ACR_SERVER }}/runner:${{ github.run_number }}
          # Name of the Container Group Instance
          name: actions-runner
          registry-login-server: ${{ SECRETS.ACR_SERVER }}
          # Username to log in Container Image Registry Server
          registry-username: ${{ secrets.ACR_USER }}
          # Password to log in Container Image Registry Server
          registry-password: ${{ secrets.ACR_PASSWORD }}
          # secure-environment-variables: # optional, default is 
          secure-environment-variables: GITHUB_TOKEN=${{ secrets.GIT_PAT }}
